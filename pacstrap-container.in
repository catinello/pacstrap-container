#!/bin/bash

VERSION="0.1"
LICENSE="MIT"

MACHINEDIR="/var/lib/machines"
CONFIGDIR="/etc/systemd/system/multi-user.target.wants"
SPARE="logrotate diffutils inetutils dhcpcd netctl jfsutils cryptsetup lvm2 device-mapper mdadm pciutils pcmciautils reiserfsprogs usbutils xfsprogs linux"

BOOT=""
VANILLA=""
SILENT=""

usage() {
	cat <<EOF
Usage: ${0##*/} (create|delete) [OPTIONS] NAME
Description:
  (COMMANDS):
	create		create a new container
	delete		delete a container

  [OPTIONS]:
	create
		-b	enable container startup on boot
		-v 	vanilla minimal linux os
	delete
		--

  NAME:
	systemd container/machine name

Version: $VERSION - License: $LICENSE
EOF
}

msg() {
	echo -e -n "\033[0;32m$1\033[0m"
	echo $1 2>&1 | logger -t ${0##*/}
}

err() {
	echo -e "\033[0;31m$1\033[0m"
	echo $1 2>&1 | logger -t ${0##*/}
}

log() {
	eval $1 2>&1 | logger -t ${0##*/}
	RV=${PIPESTATUS[0]}
	if [ "$RV" -ne "0" ]; then
		err "Error: With return value -> $RV"
		exit $RV
	fi
}

syncMetaData() {
	log "/usr/bin/arch-chroot $MACHINEDIR/$NAME pacman -Syu"
}

removePackage() {
	log "/usr/bin/arch-chroot $MACHINEDIR/$NAME pacman -Rns --noconfirm $1"
}

changeConfig() {
	log "/usr/bin/arch-chroot $MACHINEDIR/$NAME $1"
}

createContainer() {
	if [ -d "$MACHINEDIR/$NAME" ]; then
		err "Error: Machine name already exists."
		exit 90
	else
		msg "creating"
		echo -n " -> "
		mkdir $MACHINEDIR/$NAME

		msg "installing"
		echo -n " -> "
		log "/usr/bin/pacstrap -G -c -d $MACHINEDIR/$NAME base core/run-parts"

		msg "cleanup"
		echo -n " -> "
		syncMetaData
		removePackage "$SPARE"
		removePackage "$(pacman -Qtdq)"

		msg "vanilla"
		echo -n " -> "
		if [ -n "$VANILLA" ]; then
			changeConfig "/usr/bin/sed -i 's/^HoldPkg.*/HoldPkg     = glibc/' /etc/pacman.conf"
			removePackage "gnupg pacman"
			changeConfig "rm -rfv /etc/pacman.* /var/*/pacman /var/log/pacman.log"
		fi

		msg "modify"
		echo -n " -> "
		if [ -n "$BOOT" ]; then
			log "/usr/bin/systemctl enable systemd-nspawn@$NAME.service"
		fi
		changeConfig "/usr/bin/sed -i '/# End of file/i pts/0' /etc/securetty"
		log "ln -s /usr/lib/systemd/system/systemd-nspawn@.service $CONFIGDIR/systemd-nspawn@$NAME.service"
		log "/usr/bin/systemctl daemon-reload"

		msg "done"
		echo
	fi
}

deleteContainer() {
	if [ ! -d "$MACHINEDIR/$NAME" ]; then
		err "Error: Machine $NAME does not exist."
	else
		log "/usr/bin/systemctl stop systemd-nspawn@$NAME.service"
		log "/usr/bin/systemctl disable systemd-nspawn@$NAME.service"
		log "rm -frv $MACHINEDIR/$NAME"
		log "rm -fv $CONFIGDIR/systemd-nspawn@$NAME.service"
		log "/usr/bin/systemctl daemon-reload"
		msg "Machine $NAME successfully deleted."
		echo
	fi
}

if [ "$#" -ge "2" ]; then
	NAME=${@: -1}
else
	usage
	exit 91
fi

if [ "$EUID" -ne 0 ]; then
	err "Error: Please run as root!"
	exit 92
fi

if [ -z "$NAME" ]; then
	err "Error: NAME is required"
	usage
	exit 91
fi

case $1 in
	create)
		shift
		while getopts "bv" opt; do
		    case $opt in
			b)
		            BOOT=yes
		            ;;
			v)
		            VANILLA=yes
		            ;;
		        *)
			    usage
		            exit 91
		            ;;
		    esac
		done

		createContainer
		;;
	delete)
		deleteContainer
		;;
	*)
		usage
		exit 91
		;;
esac
